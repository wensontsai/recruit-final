{"version":3,"sources":["../../app/routes/examinationRoutes.js"],"names":[],"mappings":"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","file":"examinationRoutes.js","sourcesContent":["// var nodemailer = require('nodemailer');\nimport nodemailer from 'nodemailer';\nvar config = require('../config');\n\n// create reusable transporter object using the default SMTP transport\nvar transporter = nodemailer.createTransport(config.email.host, {\n  debug: true,\n});\n\nvar smtpTransport = nodemailer.createTransport('SMTP', {\n   service: config.email.service,\n   auth: {\n       user: config.email.auth.user,\n       pass: config.email.auth.pass\n   }\n});\n\nexports.startExam = function(Examination) {\n  return function(req, res, next) {\n    Examination.findOne({ _id: req.body.data.examId }, function(err, exam) {\n      if(err) return console.error(err);\n      if (!exam) {\n        return res.json({ success: false, message: 'No examination exists for that code!' });\n      }\n      if (exam) {\n        var now = new Date();\n        exam.startTime = now;\n        exam.endTime = new Date(now.getTime() + (2*1000*60*60));\n\n        exam.save(function(err) {\n          if (err) {\n            console.log('error saving :(');\n            console.error(err);\n          } else {\n            console.log('Model - Examination: startExam - Save successful ;)');\n          }\n        });\n      }\n\n      res.json(exam);\n    });\n  };\n};\nexports.initializeExam = function(Examination, User) {\n  return function(req, res, next) {\n    var result = {};\n    var exam = new Examination({\n      userId: req.body.data.userId,\n      timeAllowed: 7200000,\n      questionsTotal: 3,\n      startTime: null,\n      endTime: null,\n      answeredPrompts: [],\n      completed: null\n    });\n    exam.save(function(error, exam){\n      if(error) return console.error(error);\n      \n      User.findOne({ _id: req.body.data.userId }, function(err, user) {\n        if(err) return console.error(err);\n        if (!user) {\n          return res.json({ success: false, message: 'This user does not exist!' });\n        } else {\n\n          // -----------------------\n          // Send Email to Candidate\n          // -----------------------\n          var mailOptions = {\n              from: config.email.auth.sender_name+ ' ' +config.email.auth.user, // sender address\n              to: user.email, // list of receivers\n              subject: 'Hello ' +user.firstName+ '!', // Subject line\n              text: 'We would like to invite you to participate in a code challenge!\\n\\nPlease visit ' +config.email.testPath+ '/' +exam.id+ ' to begin!', // plaintext body\n              // html: '<b>Hello world üê¥</b>' // html body\n          };\n          \n          // send mail with defined transport object\n          // transporter.sendMail(mailOptions, function(error, info){\n          //     if(error){\n          //         return console.log(error);\n          //     }\n          //     console.log('Message sent: ' + info.response);\n          // });\n\n          // save user object\n          user.currentExam = true;\n          user.save(function(err) {\n            if (err) {\n              console.log('error saving :(');\n              console.error(err);\n            } else {\n              console.log('Model - Users: initializeExam - Save successful ;)');\n            }\n          });\n\n          result = {\n            examId: exam._id\n          };\n        }\n        res.json(result);\n      });\n    });\n  };\n}\nexports.queryExam = function(Examination, User) {\n  return function(req, res, next) {\n    var result = {};\n\n    Examination.findOne( { _id: req.body.examId } )\n      .exec()\n      .then (function(exam) {\n        result['examId'] = exam._id;\n        result['timeAllowed'] = exam.timeAllowed;\n        result['questionsTotal'] = exam.questionsTotal;\n        result['startTime'] = exam.startTime;\n        result['endTime'] = exam.endTime;\n        result['answeredPrompts'] = exam.answeredPrompts;\n        result['completed'] = exam.completed;\n\n        return User.findOne( { _id:  exam.userId } )\n          .exec()\n          .then (function(user) {\n            result['userId'] = user._id;\n            result['firstName'] = user.firstName;\n            result['lastName'] = user.lastName;\n            result['email'] = user.email;         \n            return result;\n          }, function(err) {\n              console.error('User query error => ', err);\n              res.status(500).send(err);\n          })\n      }, function(err) {\n          console.error('Exam query error => ', err);\n          res.status(500).send(err);\n      })\n      .then(function() {\n        res.json(result);\n      })\n\n  }\n}\n\nexports.finishExam = function(Examination, User) {\n  return function(req, res, next) {\n\n    Examination.findOne({ _id: req.body.examId }, function(err, exam) {\n      if(err) return console.error(err);\n      if (!exam) {\n        return res.json( { success: false, message: 'No examination exists for that code!' } );\n      }\n      if (exam) {\n        exam.completed = 'Y';\n        exam.save(function(err) {\n          if (err) {\n            console.log('error saving :(');\n            console.error(err);\n          } else {\n            console.log('Model - Examination: finishExam - Save successful ;)');\n          }\n        });\n      }\n      User.findOne({ _id: exam.userId }, function(err, user) {\n        user.completed = 'Y';\n        user.save(function(err) {\n          if (err) {\n            console.log('error saving :(');\n            console.error(err);\n          } else {\n            console.log('Model - User: finishExam - Save successful ;)');\n          }\n        });\n\n        res.json({\n          success: true\n        });\n      \n      });\n    });\n\n\n\n  };\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}