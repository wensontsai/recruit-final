{"version":3,"sources":["../../app/routes/userRoutes.js"],"names":[],"mappings":";;;AACA,IAAI,SAAS,QAAQ,QAAR,CAAT;;AAEJ,QAAQ,OAAR,GAAkB,UAAS,IAAT,EAAe;AAC/B,SAAO,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC9B,SAAK,OAAL,CAAa,EAAE,WAAW,IAAI,IAAJ,CAAS,SAAT,EAAoB,UAAU,IAAI,IAAJ,CAAS,QAAT,EAAmB,OAAO,IAAI,IAAJ,CAAS,KAAT,EAAlF,EAAoG,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtH,UAAG,GAAH,EAAQ,OAAO,QAAQ,KAAR,CAAc,GAAd,CAAP,CAAR;AACA,UAAI,IAAJ,EAAU;AACR,eAAO,IAAI,IAAJ,CAAS,EAAE,SAAS,KAAT,EAAgB,SAAS,2BAAT,EAA3B,CAAP,CADQ;OAAV,MAEO;AACL,YAAI,OAAO,OAAO,WAAP,CAAmB,EAAnB,CAAP,CADC;AAEL,YAAI,iBAAiB,OAAO,QAAP,CAAgB,IAAI,IAAJ,CAAS,QAAT,EAAmB,IAAnC,CAAjB,CAFC;;AAIL,YAAI,OAAO,IAAI,IAAJ,CAAS;AAClB,qBAAW,IAAI,IAAJ,CAAS,SAAT;AACX,oBAAU,IAAI,IAAJ,CAAS,QAAT;AACV,iBAAO,IAAI,IAAJ,CAAS,KAAT;AACP,oBAAU,cAAV;AACA,iBAAO,IAAI,IAAJ,CAAS,KAAT;AACP,uBAAa,IAAb;SANS,CAAP,CAJC;AAYL,aAAK,IAAL,CAAU,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC5B,cAAG,GAAH,EAAQ,OAAO,QAAQ,KAAR,CAAc,GAAd,CAAP,CAAR;AACA,cAAI,IAAJ,CAAS,IAAT,EAF4B;SAApB,CAAV,CAZK;OAFP;KAFkG,CAApG,CAD8B;GAAzB,CADwB;CAAf;;AA2BlB,QAAQ,aAAR,GAAwB,UAAS,IAAT,EAAe;AACrC,SAAO,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC9B,SAAK,IAAL,CAAU,EAAV,EAAc,UAAS,GAAT,EAAc,KAAd,EAAqB;AACjC,UAAG,GAAH,EAAQ,OAAO,QAAQ,KAAR,CAAc,GAAd,CAAP,CAAR;AACA,UAAI,IAAJ,CAAS,KAAT,EAFiC;KAArB,CAAd,CAD8B;GAAzB,CAD8B;CAAf","file":"userRoutes.js","sourcesContent":["// bcrypt password hashing\nvar bcrypt = require('bcrypt');\n\nexports.addUser = function(User) {\n  return function(req, res, next) {\n    User.findOne({ firstName: req.body.firstName, lastName: req.body.lastName, email: req.body.email }, function(err, user) {\n      if(err) return console.error(err);\n      if (user) {\n        return res.json({ success: false, message: 'This user already exists!' });\n      } else {\n        var salt = bcrypt.genSaltSync(10);\n        var hashedPassword = bcrypt.hashSync(req.body.password, salt);\n\n        var user = new User({\n          firstName: req.body.firstName,\n          lastName: req.body.lastName,\n          email: req.body.email,\n          password: hashedPassword,\n          admin: req.body.admin,\n          currentExam: null\n        });\n        user.save(function(err, user) {\n          if(err) return console.error(err);\n          res.json(user);\n        });\n      }\n    });\n  };\n};\n\nexports.queryAllUsers = function(User) {\n  return function(req, res, next) {\n    User.find({}, function(err, users) {\n      if(err) return console.error(err);\n      res.json(users);\n    });\n  };\n};"]}