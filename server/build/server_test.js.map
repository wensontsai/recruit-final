{"version":3,"sources":["../app/server_test.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAV;AACJ,IAAI,SAAS,QAAS,UAAT,CAAT;AACJ,IAAI,MAAM,SAAN;;;;;AAKJ,IAAI,OAAO,QAAQ,eAAR,CAAP;AACJ,IAAI,SAAS,QAAQ,iBAAR,CAAT;AACJ,IAAI,cAAc,QAAQ,sBAAR,CAAd;AACJ,IAAI,SAAS,QAAQ,iBAAR,CAAT;;;;;AAKJ,IAAI,YAAY,QAAQ,MAAR,EAAZ;AACJ,IAAI,GAAJ,CAAQ,MAAR,EAAgB,SAAhB;;AAEA,IAAI,eAAe,QAAQ,uBAAR,CAAf;AACJ,IAAI,oBAAoB,QAAQ,4BAAR,CAApB;AACJ,IAAI,eAAe,QAAQ,uBAAR,CAAf;AACJ,IAAI,aAAa,QAAQ,qBAAR,CAAb;;;AAGJ,UAAU,GAAV,CAAc,kBAAd,EAAkC,aAAa,eAAb,CAA6B,MAA7B,CAAlC;AACA,UAAU,GAAV,CAAc,sBAAd,EAAsC,aAAa,mBAAb,CAAiC,MAAjC,CAAtC;AACA,UAAU,GAAV,CAAc,qBAAd,EAAqC,WAAW,aAAX,CAAyB,IAAzB,CAArC;;;AAGA,UAAU,IAAV,CAAe,eAAf,EAAgC,aAAa,YAAb,CAA0B,MAA1B,EAAkC,MAAlC,CAAhC;AACA,UAAU,IAAV,CAAe,wBAAf,EAAyC,aAAa,qBAAb,CAAmC,MAAnC,EAA2C,IAA3C,CAAzC;AACA,UAAU,IAAV,CAAe,YAAf,EAA6B,kBAAkB,SAAlB,CAA4B,WAA5B,EAAyC,IAAzC,CAA7B;AACA,UAAU,IAAV,CAAe,iBAAf,EAAkC,kBAAkB,cAAlB,CAAiC,WAAjC,EAA8C,IAA9C,CAAlC;AACA,UAAU,IAAV,CAAe,YAAf,EAA6B,kBAAkB,SAAlB,CAA4B,WAA5B,CAA7B;AACA,UAAU,IAAV,CAAe,aAAf,EAA8B,kBAAkB,UAAlB,CAA6B,WAA7B,EAA0C,IAA1C,CAA9B;AACA,UAAU,IAAV,CAAe,YAAf,EAA6B,aAAa,SAAb,CAAuB,MAAvB,CAA7B;AACA,UAAU,IAAV,CAAe,YAAf,EAA6B,aAAa,SAAb,CAAuB,MAAvB,CAA7B;AACA,UAAU,IAAV,CAAe,aAAf,EAA8B,aAAa,UAAb,CAAwB,MAAxB,CAA9B;AACA,UAAU,IAAV,CAAe,eAAf,EAAgC,aAAa,YAAb,CAA0B,MAA1B,CAAhC;AACA,UAAU,IAAV,CAAe,eAAf,EAAgC,WAAW,OAAX,CAAmB,IAAnB,CAAhC;;AAEA,OAAO,OAAP,GAAiB,GAAjB","file":"server_test.js","sourcesContent":["var express = require('express');\nvar config = require ('./config');\nvar app = express();\n\n// ------------------------------------\n// Mongoose - Models\n// ------------------------------------\nvar User = require('./models/user');\nvar Prompt = require('./models/prompt');\nvar Examination = require('./models/examination');\nvar Answer = require('./models/answer');\n\n// ------------------------------------\n// API Routes\n// ------------------------------------\nvar apiRoutes = express.Router ();\napp.use('/api', apiRoutes);\n\nvar promptRoutes = require('./routes/promptRoutes');\nvar examinationRoutes = require('./routes/examinationRoutes');\nvar answerRoutes = require('./routes/answerRoutes');\nvar userRoutes = require('./routes/userRoutes');\n\n// ::::: GET :::::\napiRoutes.get('/queryAllPrompts', promptRoutes.queryAllPrompts(Prompt));\napiRoutes.get('/queryAllPromptsList', promptRoutes.queryAllPromptsList(Prompt));\napiRoutes.get('/queryAllCandidates', userRoutes.queryAllUsers(User));\n\n// ::::: POST :::::\napiRoutes.post('/submitAnswer', answerRoutes.submitAnswer(Answer, Prompt));\napiRoutes.post('/queryCandidateAnswers', answerRoutes.queryCandidateAnswers(Answer, User));\napiRoutes.post('/queryExam', examinationRoutes.queryExam(Examination, User));\napiRoutes.post('/initializeExam', examinationRoutes.initializeExam(Examination, User));\napiRoutes.post('/startExam', examinationRoutes.startExam(Examination));\napiRoutes.post('/finishExam', examinationRoutes.finishExam(Examination, User));\napiRoutes.post('/addPrompt', promptRoutes.addPrompt(Prompt));\napiRoutes.post('/addPrompt', promptRoutes.addPrompt(Prompt));\napiRoutes.post('/editPrompt', promptRoutes.editPrompt(Prompt));\napiRoutes.post('/deletePrompt', promptRoutes.deletePrompt(Prompt));\napiRoutes.post('/addCandidate', userRoutes.addUser(User));\n\nmodule.exports = app;\n"]}